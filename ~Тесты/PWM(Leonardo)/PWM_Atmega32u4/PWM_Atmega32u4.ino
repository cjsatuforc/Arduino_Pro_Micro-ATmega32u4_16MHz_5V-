/*v1.0_Write_by_ImaSoft_26.02.16 ARDUINO Pro Micro Test_PWM
 *Пятница - v1.0 от‚ 26.02.16; Тестовый скетчь, тестирование PWM выходов, стандарное использование и библиотекой PWM
 *
 *Хотел отметить что есть возможность задания разных частот на разных таймерах и их пар ТАЙМЕР-0(OC0B=3;OC0A=11не_используется),ТАЙМЕР-1(OC1A=9; OC1B=10),ТАЙМЕР-3(OC3A=5) ТАЙМЕР-4(OC4D=6не_используется)
 *Например нам нужно на таймере-1 иметь частоту PWM=500Гц вывод 10(Управление_нагрузкой), а на таймере-3 частоту PWM=16000Гц вывод 5(Управление_вентилятором)
 *В Arduino по умолчанию используется таймер-0 3вывод частота 976Гц(Менять_ее_нельзя), все остальные по 490Гц, использовать альторнативную библиотеку можно с пинами 5-9-10 6не_рабочий
*/

//--------------------------------------------------------------
//#include <avr/wdt.h>                                            //Стандартная_библиотека_WDT_таймера
#include <PWM.h>
//--------------------------------------------------------------

//---Дерективы_отладки--После_отладки_все_за_комментировать-----
#define Debug_Serial                                            //Разрешить_использование_для_отладки_последавательный_порт
//--------------------------------------------------------------//
#define PWM1PIN3              3                                 //
#define PWM2PIN5              5                                 //
#define PWM2PIN6              6                                 //
#define PWM3PIN9              9                                 //
#define PWM3PIN10             10                                //
//--------------------------------------------------------------// 
#define TimeLED              500//ms                           //Время_интервала_мигания_встроенного_на_плате_в_миллисекундах
boolean FLLED =              false;                             //Флаг_состояния(ВКЛ/ОТКЛ)_светодиода 
//--------------------------------------------------------------//
#define LEDON                PORTD &= ~(1<<5)                   //
#define LEDOFF               PORTD |= (1<<5)                    //
//--------------------------------------------------------------//
// Массив задействованных номеров Pins Arduino, для управления например 4 реле.
int PWMPins[] = {3,5,6,9,10};
int PWMPins_[] = {5,9,10};
//--------------------------------------------------------------//



//***START_SIGNAL********************************************** //Прерывание вызывается один раз в миллисекунду
unsigned long Time1_COUNT     = 0;                              //Счетчик_времени_таймера-1
unsigned long Time_COUNT_Bak  = 0;                              //Прошлое_значение_счетчик_времени_таймера
//-------------------------------------------------------------
SIGNAL(TIMER0_COMPA_vect) {
//ISR(TIMER0_COMPA_vect) {
 //------------------------------------------------------------
 unsigned long milis;                                           //Переменная_с_текущим_временем_работы_контроллера
 milis = millis();
 Time1_COUNT += milis-Time_COUNT_Bak;
 Time_COUNT_Bak = milis;
 //------------------------------------------------------------
 if (Time1_COUNT >= TimeLED) {
  Time1_COUNT = 0;
  if (FLLED) {FLLED = false;LEDOFF;}
  else {FLLED = true;LEDON;}
 }
 //------------------------------------------------------------

 //------------------------------------------------------------
}
//***END_SIGNAL************************************************




//***START_Setup***********************************************
void setup() {
  //-----------------------------------------------------------
  #ifdef Debug_Serial
  Serial.begin(9600);
  #endif   
  //----------------------------------------------------------- //Timer0 уже используется millis(), прерывание TIMER0_OVF_vect
  OCR0A = 0x7F;                                                 //Используем_прерывание_от_компаратора_OCR0A_таймера-0,_расчетное_время_вызова:1/(16000000(частота_генератора_ЦПУ)/64(делитель_по_умолчанию)/256(полное_время_таймера_TCN0L))=0,001024мСб_так_как_таймер_TCN0L_не_сбрасывается_в_ноль_по_достижению_значения_компаратора_то_время_генерации_прерывания_будет_равно_времени_полного_цикла_таймера_TCN0L
  TIMSK0 |= _BV(OCIE0A);                                        //Разрешить_прерывание_от_компаратора_OCR0A(В_PWM-6pin),_то_есть,_нельзя_использовать_одновременно_вывод_PWM_на_ножку-6_и_прерывание  
  //-----------------------------------------------------------
  delay(1000);                                                 //Задержка_в_1секунду
  //-----------------------------------------------------------
  #ifdef Debug_Serial
  for(int i = 0; i < 5; i++) {
    Serial.print("ACTIVE_STANDART_PWM_PIN");Serial.print(PWMPins[i]);Serial.print(": Valume-55; (PIN3:Freq-976Hz; PIN-5-6-9-10:Freq-490Hz");Serial.println("Wait-10s)");
    pinMode(PWMPins[i],OUTPUT);
    analogWrite(PWMPins[i],55);
    delay(10000);
    Serial.print("ACTIVE_STANDART_PWM_PIN");Serial.print(PWMPins[i]);Serial.print(": Valume-200; (PIN3:Freq-976Hz; PIN-5-6-9-10:Freq-490Hz");Serial.println("Wait-10s)");
    analogWrite(PWMPins[i],200);
    delay(10000);
    Serial.print("DEACTIVE_STANDART_PWM_PIN");Serial.println(PWMPins[i]);Serial.println("");
    digitalWrite(PWMPins[i],LOW);
    pinMode(PWMPins[i],INPUT);}
  #endif
  Serial.println("");Serial.println("");
  //---PWM-----------------------------------------------------
  InitTimersSafe();                                             //initialize all timers except for 0, to save time keeping functions
  SetPinFrequency(PWM2PIN5, 1000);                              //setting the frequency to 1000 Hz
  SetPinFrequency(PWM3PIN9, 5000);//PWM3PIN10                   //setting the frequency to 5000 Hz
  //-----------------------------------------------------------
  #ifdef Debug_Serial
  for(int i = 0; i < 3; i++) {
    Serial.print("ACTIVE_PWM_PIN");Serial.print(PWMPins_[i]);Serial.print(": Valume-55; (PIN3:Freq-976Hz; PIN-5:Freq-1000Hz;PIN-9-10:Freq-5000Hz");Serial.println("Wait-10s)");
    pinMode(PWMPins_[i],OUTPUT);
    pwmWrite(PWMPins_[i],55);
    delay(10000);
    Serial.print("ACTIVE_PWM_PIN");Serial.print(PWMPins_[i]);Serial.print(": Valume-200; (PIN3:Freq-976Hz; PIN-5:Freq-1000Hz;PIN-9-10:Freq-5000Hz");Serial.println("Wait-10s)");
    pwmWrite(PWMPins_[i],200);
    delay(10000);
    Serial.print("DEACTIVE_PWM_PIN");Serial.println(PWMPins_[i]);Serial.println("");
    digitalWrite(PWMPins_[i],LOW);
    pinMode(PWMPins_[i],INPUT);}
  #endif
  //-----------------------------------------------------------//Нельзя_использовать_на_ARDUINO_pro_micro(ATMega32u4)_перестанет_прошиваться:лечение_перепрошивка_Boot-Loadera
  //wdt_enable (WDTO_8S);                                      //Активировать_WDT_таймер_на_период_8сек
  //wdt_disable();                                             //Rомманда_отключения_WDT_таймера
  //-----------------------------------------------------------

  //-----------------------------------------------------------
}
//***END_Setup*************************************************


//***START_loop************************************************
void loop() {
 //------------------------------------------------------------//Нельзя_использовать_на_ARDUINO_pro_micro(ATMega32u4)_перестанет_прошиваться:лечение_перепрошивка_Boot-Loadera
 //wdt_reset();                                                //брос_сторожевого_таймера_WDT
 //------------------------------------------------------------

 //------------------------------------------------------------
}
//***END_loop**************************************************

